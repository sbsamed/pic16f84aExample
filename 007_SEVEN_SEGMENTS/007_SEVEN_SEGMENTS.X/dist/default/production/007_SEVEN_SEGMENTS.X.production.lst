

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Mon Feb 21 14:04:15 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F84
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x4E,2
    12  0000                     
    13                           ; Version 2.40
    14                           ; Generated 17/11/2021 GMT
    15                           ; 
    16                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F84 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  0081                     	;# 
    60  0085                     	;# 
    61  0086                     	;# 
    62  0088                     	;# 
    63  0089                     	;# 
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  0081                     	;# 
    76  0085                     	;# 
    77  0086                     	;# 
    78  0088                     	;# 
    79  0089                     	;# 
    80                           
    81                           	psect	idataBANK0
    82  038A                     __pidataBANK0:
    83                           
    84                           ;initializer for _sevenSegNumbers
    85  038A  343F               	retlw	63
    86  038B  3406               	retlw	6
    87  038C  345B               	retlw	91
    88  038D  344F               	retlw	79
    89  038E  3466               	retlw	102
    90  038F  346D               	retlw	109
    91  0390  347C               	retlw	124
    92  0391  3407               	retlw	7
    93  0392  347F               	retlw	127
    94  0393  346F               	retlw	111
    95  0006                     _PORTB	set	6
    96  0029                     _RA1	set	41
    97  0028                     _RA0	set	40
    98  0086                     _TRISB	set	134
    99                           
   100                           	psect	cinit
   101  03EA                     start_initialization:	
   102                           ; #config settings
   103                           
   104  03EA                     __initialization:
   105                           
   106                           ; Initialize objects allocated to BANK0
   107  03EA  238A               	fcall	__pidataBANK0	;fetch initializer
   108  03EB  008C               	movwf	__pdataBANK0& (0+127)
   109  03EC  238B               	fcall	__pidataBANK0+1	;fetch initializer
   110  03ED  008D               	movwf	(__pdataBANK0+1)& (0+127)
   111  03EE  238C               	fcall	__pidataBANK0+2	;fetch initializer
   112  03EF  008E               	movwf	(__pdataBANK0+2)& (0+127)
   113  03F0  238D               	fcall	__pidataBANK0+3	;fetch initializer
   114  03F1  008F               	movwf	(__pdataBANK0+3)& (0+127)
   115  03F2  238E               	fcall	__pidataBANK0+4	;fetch initializer
   116  03F3  0090               	movwf	(__pdataBANK0+4)& (0+127)
   117  03F4  238F               	fcall	__pidataBANK0+5	;fetch initializer
   118  03F5  0091               	movwf	(__pdataBANK0+5)& (0+127)
   119  03F6  2390               	fcall	__pidataBANK0+6	;fetch initializer
   120  03F7  0092               	movwf	(__pdataBANK0+6)& (0+127)
   121  03F8  2391               	fcall	__pidataBANK0+7	;fetch initializer
   122  03F9  0093               	movwf	(__pdataBANK0+7)& (0+127)
   123  03FA  2392               	fcall	__pidataBANK0+8	;fetch initializer
   124  03FB  0094               	movwf	(__pdataBANK0+8)& (0+127)
   125  03FC  2393               	fcall	__pidataBANK0+9	;fetch initializer
   126  03FD  0095               	movwf	(__pdataBANK0+9)& (0+127)
   127  03FE                     end_of_initialization:	
   128                           ;End of C runtime variable initialization code
   129                           
   130  03FE                     __end_of__initialization:
   131  03FE  0183               	clrf	3
   132  03FF  2B94               	ljmp	_main	;jump to C main() function
   133                           
   134                           	psect	dataBANK0
   135  000C                     __pdataBANK0:
   136  000C                     _sevenSegNumbers:
   137  000C                     	ds	10
   138                           
   139                           	psect	cstackBANK0
   140  0016                     __pcstackBANK0:
   141  0016                     ?_main:
   142  0016                     ??_main:	
   143                           ; 1 bytes @ 0x0
   144                           
   145                           
   146                           ; 1 bytes @ 0x0
   147  0016                     	ds	2
   148  0018                     main@i:
   149                           
   150                           ; 2 bytes @ 0x2
   151  0018                     	ds	2
   152  001A                     main@j:
   153                           
   154                           ; 2 bytes @ 0x4
   155  001A                     	ds	2
   156                           
   157                           	psect	maintext
   158  0394                     __pmaintext:	
   159 ;;
   160 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   161 ;;
   162 ;; *************** function _main *****************
   163 ;; Defined at:
   164 ;;		line 26 in file "main.c"
   165 ;; Parameters:    Size  Location     Type
   166 ;;		None
   167 ;; Auto vars:     Size  Location     Type
   168 ;;  j               2    4[BANK0 ] int 
   169 ;;  i               2    2[BANK0 ] int 
   170 ;; Return value:  Size  Location     Type
   171 ;;                  1    wreg      void 
   172 ;; Registers used:
   173 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   174 ;; Tracked objects:
   175 ;;		On entry : B00/0
   176 ;;		On exit  : 0/0
   177 ;;		Unchanged: 0/0
   178 ;; Data sizes:     COMMON   BANK0
   179 ;;      Params:         0       0
   180 ;;      Locals:         0       4
   181 ;;      Temps:          0       2
   182 ;;      Totals:         0       6
   183 ;;Total ram usage:        6 bytes
   184 ;; This function calls:
   185 ;;		Nothing
   186 ;; This function is called by:
   187 ;;		Startup code after reset
   188 ;; This function uses a non-reentrant model
   189 ;;
   190                           
   191  0394                     _main:	
   192                           ;psect for function _main
   193                           
   194  0394                     l644:	
   195                           ;incstack = 0
   196                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1]
   197                           
   198                           
   199                           ;main.c: 27:     TRISB=0x00;
   200  0394  1683               	bsf	3,5	;RP0=1, select bank1
   201  0395  0186               	clrf	6	;volatile
   202  0396                     l17:	
   203                           ;main.c: 28:     while(1){
   204                           
   205                           
   206                           ;main.c: 29:         for(int i=0;i<10;i++){
   207  0396  1283               	bcf	3,5	;RP0=0, select bank0
   208  0397  0198               	clrf	main@i
   209  0398  0199               	clrf	main@i+1
   210  0399                     l650:
   211                           
   212                           ;main.c: 30:             for(int j=0;j<10;j++){
   213  0399  1283               	bcf	3,5	;RP0=0, select bank0
   214  039A  019A               	clrf	main@j
   215  039B  019B               	clrf	main@j+1
   216  039C                     l20:
   217                           
   218                           ;main.c: 31:                 RA0=1;
   219  039C  1283               	bcf	3,5	;RP0=0, select bank0
   220  039D  1405               	bsf	5,0	;volatile
   221                           
   222                           ;main.c: 32:                 RA1=0;
   223  039E  1085               	bcf	5,1	;volatile
   224  039F                     l656:
   225                           
   226                           ;main.c: 33:                 PORTB=sevenSegNumbers[j];
   227  039F  081A               	movf	main@j,w
   228  03A0  3E0C               	addlw	(low (_sevenSegNumbers| 0))& (0+255)
   229  03A1  0084               	movwf	4
   230  03A2  1383               	bcf	3,7	;select IRP bank0
   231  03A3  0800               	movf	0,w
   232  03A4  0086               	movwf	6	;volatile
   233  03A5                     l658:
   234                           
   235                           ;main.c: 34:                 _delay((unsigned long)((100)*(4000000/4000.0)));
   236  03A5  3082               	movlw	130
   237  03A6  0097               	movwf	??_main+1
   238  03A7  30DD               	movlw	221
   239  03A8  0096               	movwf	??_main
   240  03A9                     u57:
   241  03A9  0B96               	decfsz	??_main,f
   242  03AA  2BA9               	goto	u57
   243  03AB  0B97               	decfsz	??_main+1,f
   244  03AC  2BA9               	goto	u57
   245  03AD  2BAE               	nop2
   246  03AE                     l660:
   247                           
   248                           ;main.c: 35:                  RA0=0;
   249  03AE  1283               	bcf	3,5	;RP0=0, select bank0
   250  03AF  1005               	bcf	5,0	;volatile
   251  03B0                     l662:
   252                           
   253                           ;main.c: 36:                  RA1=1;
   254  03B0  1485               	bsf	5,1	;volatile
   255  03B1                     l664:
   256                           
   257                           ;main.c: 37:                  PORTB=sevenSegNumbers[i];
   258  03B1  0818               	movf	main@i,w
   259  03B2  3E0C               	addlw	(low (_sevenSegNumbers| 0))& (0+255)
   260  03B3  0084               	movwf	4
   261  03B4  1383               	bcf	3,7	;select IRP bank0
   262  03B5  0800               	movf	0,w
   263  03B6  0086               	movwf	6	;volatile
   264                           
   265                           ;main.c: 38:                   _delay((unsigned long)((100)*(4000000/4000.0)));
   266  03B7  3082               	movlw	130
   267  03B8  0097               	movwf	??_main+1
   268  03B9  30DD               	movlw	221
   269  03BA  0096               	movwf	??_main
   270  03BB                     u67:
   271  03BB  0B96               	decfsz	??_main,f
   272  03BC  2BBB               	goto	u67
   273  03BD  0B97               	decfsz	??_main+1,f
   274  03BE  2BBB               	goto	u67
   275  03BF  2BC0               	nop2
   276                           
   277                           ;main.c: 39:             }
   278  03C0  3001               	movlw	1
   279  03C1  1283               	bcf	3,5	;RP0=0, select bank0
   280  03C2  079A               	addwf	main@j,f
   281  03C3  1803               	skipnc
   282  03C4  0A9B               	incf	main@j+1,f
   283  03C5  3000               	movlw	0
   284  03C6  079B               	addwf	main@j+1,f
   285  03C7                     l666:
   286  03C7  081B               	movf	main@j+1,w
   287  03C8  3A80               	xorlw	128
   288  03C9  00CF               	movwf	btemp+1
   289  03CA  3080               	movlw	128
   290  03CB  024F               	subwf	btemp+1,w
   291  03CC  1D03               	skipz
   292  03CD  2BD0               	goto	u35
   293  03CE  300A               	movlw	10
   294  03CF  021A               	subwf	main@j,w
   295  03D0                     u35:
   296  03D0  1C03               	skipc
   297  03D1  2BD3               	goto	u31
   298  03D2  2BD4               	goto	u30
   299  03D3                     u31:
   300  03D3  2B9C               	goto	l20
   301  03D4                     u30:
   302  03D4                     l668:
   303                           
   304                           ;main.c: 40:         }
   305  03D4  3001               	movlw	1
   306  03D5  1283               	bcf	3,5	;RP0=0, select bank0
   307  03D6  0798               	addwf	main@i,f
   308  03D7  1803               	skipnc
   309  03D8  0A99               	incf	main@i+1,f
   310  03D9  3000               	movlw	0
   311  03DA  0799               	addwf	main@i+1,f
   312  03DB                     l670:
   313  03DB  0819               	movf	main@i+1,w
   314  03DC  3A80               	xorlw	128
   315  03DD  00CF               	movwf	btemp+1
   316  03DE  3080               	movlw	128
   317  03DF  024F               	subwf	btemp+1,w
   318  03E0  1D03               	skipz
   319  03E1  2BE4               	goto	u45
   320  03E2  300A               	movlw	10
   321  03E3  0218               	subwf	main@i,w
   322  03E4                     u45:
   323  03E4  1C03               	skipc
   324  03E5  2BE7               	goto	u41
   325  03E6  2BE8               	goto	u40
   326  03E7                     u41:
   327  03E7  2B99               	goto	l650
   328  03E8                     u40:
   329  03E8  2B96               	goto	l17
   330  03E9  2800               	ljmp	start
   331  03EA                     __end_of_main:
   332  004E                     btemp	set	78	;btemp
   333  004E                     wtemp0	set	78
   334                           
   335                           	psect	idloc
   336                           
   337                           ;Config register IDLOC0 @ 0x2000
   338                           ;	unspecified, using default values
   339  2000                     	org	8192
   340  2000  3FFF               	dw	16383
   341                           
   342                           ;Config register IDLOC1 @ 0x2001
   343                           ;	unspecified, using default values
   344  2001                     	org	8193
   345  2001  3FFF               	dw	16383
   346                           
   347                           ;Config register IDLOC2 @ 0x2002
   348                           ;	unspecified, using default values
   349  2002                     	org	8194
   350  2002  3FFF               	dw	16383
   351                           
   352                           ;Config register IDLOC3 @ 0x2003
   353                           ;	unspecified, using default values
   354  2003                     	org	8195
   355  2003  3FFF               	dw	16383
   356                           
   357                           	psect	config
   358                           
   359                           ;Config register CONFIG @ 0x2007
   360                           ;	Oscillator Selection bits
   361                           ;	FOSC = XT, XT oscillator
   362                           ;	Watchdog Timer
   363                           ;	WDTE = OFF, WDT disabled
   364                           ;	Power-up Timer Enable bit
   365                           ;	PWRTE = OFF, Power-up Timer is disabled
   366                           ;	Code Protection bit
   367                           ;	CP = OFF, Code protection disabled
   368  2007                     	org	8199
   369  2007  3FF9               	dw	16377

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            66      6      16

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0     136
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               42      6      10       3       24.2%
BITBANK0            42      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITCOMMON            0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      10       6        0.0%
ABS                  0      0      10       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              40      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Mon Feb 21 14:04:15 2022

                     l20 039C                       l17 0396                       u30 03D4  
                     u31 03D3                       u40 03E8                       u41 03E7  
                     u35 03D0                       u45 03E4                       u57 03A9  
                     u67 03BB                      l650 0399                      l660 03AE  
                    l644 0394                      l670 03DB                      l662 03B0  
                    l664 03B1                      l656 039F                      l666 03C7  
                    l658 03A5                      l668 03D4                      _RA0 0028  
                    _RA1 0029                      fsr0 0004                      indf 0000  
                   _main 0394                     btemp 004E                     start 0000  
                  ?_main 0016                    _PORTB 0006                    _TRISB 0086  
        _sevenSegNumbers 000C                    main@i 0018                    main@j 001A  
                  status 0003                    wtemp0 004E          __initialization 03EA  
           __end_of_main 03EA                   ??_main 0016  __end_of__initialization 03FE  
           __pidataBANK0 038A               __pmaintext 0394     end_of_initialization 03FE  
    start_initialization 03EA              __pdataBANK0 000C                ___latbits 0000  
          __pcstackBANK0 0016  
